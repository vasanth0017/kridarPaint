generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
} 

model Product {
  id          String   @id @default(uuid()) @map("_id") 
  name        String
  images      String[] 
  price       Float
  description String
  color       String
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
}

model Category {
  id        String    @id @default(uuid()) @map("_id") 
  name      String    @unique
  products  Product[]
}

model User {
  id                   String    @id @default(cuid()) @map("_id")
  name                 String?
  email                String?   @unique
  emailVerified        DateTime?
  password             String?
  image                String?
  role                 String?   @default("user")
  resetToken           String?  
  resetTokenExpiry     DateTime?
  phoneNumber          String?   
  address              String?
  company              String?
  accounts             Account[]
  sessions             Session[]
}
model Account {
  id                 String  @id @default(cuid())  @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())  @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String @unique
  expires    DateTime
  createdAt  DateTime @default(now())

  @@unique([identifier, token])
}
